'use strict';

exports.__esModule = true;
exports.default = {
    screenshotsPathNotSpecified: 'Was unable to take screenshots because the screenshot directory is not specified. To specify it, use the "-s" or "--screenshots" command line option or the "screenshots" method of the test runner in case you are using API.',
    screenshotError: 'Was unable to take a screenshot due to an error.\n\n{errMessage}',
    screenshotMarkNotFound: 'Unable to locate the page area in the browser window screenshot at {screenshotPath}, because the page area mark with ID {markId} is not found in the screenshot.',
    screenshotRewritingError: 'The file at "{screenshotPath}" already exists. It has just been rewritten with a recent screenshot. This situation can possibly cause issues. To avoid them, make sure that each screenshot has a unique path. If a test runs in multiple browsers, consider including the user agent in the screenshot path or generate a unique identifier in another way.',
    browserManipulationsOnRemoteBrowser: 'The screenshot and window resize functionalities are not supported in a remote browser. They can function only if the browser is running on the same machine and in the same environment as the TestCafe server.',
    screenshotNotSupportedByBrowserProvider: 'The screenshot functionality is not supported by the "{providerName}" browser provider.',
    resizeNotSupportedByBrowserProvider: 'The window resize functionality is not supported by the "{providerName}" browser provider.',
    maximizeNotSupportedByBrowserProvider: 'The window maximization functionality is not supported by the "{providerName}" browser provider.',
    resizeError: 'Was unable to resize the window due to an error.\n\n{errMessage}',
    maximizeError: 'Was unable to maximize the window due to an error.\n\n{errMessage}',
    requestMockCORSValidationFailed: '{RequestHook}: CORS validation failed for a request specified as {requestFilterRule}',
    debugInHeadlessError: 'You cannot debug in headless mode.',
    errorReadConfigFile: 'An error has occurred while reading the configuration file.',
    errorConfigFileCannotBeParsed: "Failed to parse the '.testcaferc.json' file.\\n\\nThis file is not a well-formed JSON file.",
    configOptionsWereOverriden: 'The {optionsString} option{suffix} from the configuration file will be ignored.'
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub3RpZmljYXRpb25zL3dhcm5pbmctbWVzc2FnZS5qcyJdLCJuYW1lcyI6WyJzY3JlZW5zaG90c1BhdGhOb3RTcGVjaWZpZWQiLCJzY3JlZW5zaG90RXJyb3IiLCJzY3JlZW5zaG90TWFya05vdEZvdW5kIiwic2NyZWVuc2hvdFJld3JpdGluZ0Vycm9yIiwiYnJvd3Nlck1hbmlwdWxhdGlvbnNPblJlbW90ZUJyb3dzZXIiLCJzY3JlZW5zaG90Tm90U3VwcG9ydGVkQnlCcm93c2VyUHJvdmlkZXIiLCJyZXNpemVOb3RTdXBwb3J0ZWRCeUJyb3dzZXJQcm92aWRlciIsIm1heGltaXplTm90U3VwcG9ydGVkQnlCcm93c2VyUHJvdmlkZXIiLCJyZXNpemVFcnJvciIsIm1heGltaXplRXJyb3IiLCJyZXF1ZXN0TW9ja0NPUlNWYWxpZGF0aW9uRmFpbGVkIiwiZGVidWdJbkhlYWRsZXNzRXJyb3IiLCJlcnJvclJlYWRDb25maWdGaWxlIiwiZXJyb3JDb25maWdGaWxlQ2Fubm90QmVQYXJzZWQiLCJjb25maWdPcHRpb25zV2VyZU92ZXJyaWRlbiJdLCJtYXBwaW5ncyI6Ijs7O2tCQUFlO0FBQ1hBLGlDQUF5QyxnT0FEOUI7QUFFWEMscUJBQXlDLGtFQUY5QjtBQUdYQyw0QkFBeUMsa0tBSDlCO0FBSVhDLDhCQUF5Qyw4VkFKOUI7QUFLWEMseUNBQXlDLGtOQUw5QjtBQU1YQyw2Q0FBeUMseUZBTjlCO0FBT1hDLHlDQUF5Qyw0RkFQOUI7QUFRWEMsMkNBQXlDLGtHQVI5QjtBQVNYQyxpQkFBeUMsa0VBVDlCO0FBVVhDLG1CQUF5QyxvRUFWOUI7QUFXWEMscUNBQXlDLHNGQVg5QjtBQVlYQywwQkFBeUMsb0NBWjlCO0FBYVhDLHlCQUF5Qyw2REFiOUI7QUFjWEMsbUNBQXlDLDZGQWQ5QjtBQWVYQyxnQ0FBeUM7QUFmOUIsQyIsImZpbGUiOiJub3RpZmljYXRpb25zL3dhcm5pbmctbWVzc2FnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBzY3JlZW5zaG90c1BhdGhOb3RTcGVjaWZpZWQ6ICAgICAgICAgICAgICdXYXMgdW5hYmxlIHRvIHRha2Ugc2NyZWVuc2hvdHMgYmVjYXVzZSB0aGUgc2NyZWVuc2hvdCBkaXJlY3RvcnkgaXMgbm90IHNwZWNpZmllZC4gVG8gc3BlY2lmeSBpdCwgdXNlIHRoZSBcIi1zXCIgb3IgXCItLXNjcmVlbnNob3RzXCIgY29tbWFuZCBsaW5lIG9wdGlvbiBvciB0aGUgXCJzY3JlZW5zaG90c1wiIG1ldGhvZCBvZiB0aGUgdGVzdCBydW5uZXIgaW4gY2FzZSB5b3UgYXJlIHVzaW5nIEFQSS4nLFxuICAgIHNjcmVlbnNob3RFcnJvcjogICAgICAgICAgICAgICAgICAgICAgICAgJ1dhcyB1bmFibGUgdG8gdGFrZSBhIHNjcmVlbnNob3QgZHVlIHRvIGFuIGVycm9yLlxcblxcbntlcnJNZXNzYWdlfScsXG4gICAgc2NyZWVuc2hvdE1hcmtOb3RGb3VuZDogICAgICAgICAgICAgICAgICAnVW5hYmxlIHRvIGxvY2F0ZSB0aGUgcGFnZSBhcmVhIGluIHRoZSBicm93c2VyIHdpbmRvdyBzY3JlZW5zaG90IGF0IHtzY3JlZW5zaG90UGF0aH0sIGJlY2F1c2UgdGhlIHBhZ2UgYXJlYSBtYXJrIHdpdGggSUQge21hcmtJZH0gaXMgbm90IGZvdW5kIGluIHRoZSBzY3JlZW5zaG90LicsXG4gICAgc2NyZWVuc2hvdFJld3JpdGluZ0Vycm9yOiAgICAgICAgICAgICAgICAnVGhlIGZpbGUgYXQgXCJ7c2NyZWVuc2hvdFBhdGh9XCIgYWxyZWFkeSBleGlzdHMuIEl0IGhhcyBqdXN0IGJlZW4gcmV3cml0dGVuIHdpdGggYSByZWNlbnQgc2NyZWVuc2hvdC4gVGhpcyBzaXR1YXRpb24gY2FuIHBvc3NpYmx5IGNhdXNlIGlzc3Vlcy4gVG8gYXZvaWQgdGhlbSwgbWFrZSBzdXJlIHRoYXQgZWFjaCBzY3JlZW5zaG90IGhhcyBhIHVuaXF1ZSBwYXRoLiBJZiBhIHRlc3QgcnVucyBpbiBtdWx0aXBsZSBicm93c2VycywgY29uc2lkZXIgaW5jbHVkaW5nIHRoZSB1c2VyIGFnZW50IGluIHRoZSBzY3JlZW5zaG90IHBhdGggb3IgZ2VuZXJhdGUgYSB1bmlxdWUgaWRlbnRpZmllciBpbiBhbm90aGVyIHdheS4nLFxuICAgIGJyb3dzZXJNYW5pcHVsYXRpb25zT25SZW1vdGVCcm93c2VyOiAgICAgJ1RoZSBzY3JlZW5zaG90IGFuZCB3aW5kb3cgcmVzaXplIGZ1bmN0aW9uYWxpdGllcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBhIHJlbW90ZSBicm93c2VyLiBUaGV5IGNhbiBmdW5jdGlvbiBvbmx5IGlmIHRoZSBicm93c2VyIGlzIHJ1bm5pbmcgb24gdGhlIHNhbWUgbWFjaGluZSBhbmQgaW4gdGhlIHNhbWUgZW52aXJvbm1lbnQgYXMgdGhlIFRlc3RDYWZlIHNlcnZlci4nLFxuICAgIHNjcmVlbnNob3ROb3RTdXBwb3J0ZWRCeUJyb3dzZXJQcm92aWRlcjogJ1RoZSBzY3JlZW5zaG90IGZ1bmN0aW9uYWxpdHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgXCJ7cHJvdmlkZXJOYW1lfVwiIGJyb3dzZXIgcHJvdmlkZXIuJyxcbiAgICByZXNpemVOb3RTdXBwb3J0ZWRCeUJyb3dzZXJQcm92aWRlcjogICAgICdUaGUgd2luZG93IHJlc2l6ZSBmdW5jdGlvbmFsaXR5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIFwie3Byb3ZpZGVyTmFtZX1cIiBicm93c2VyIHByb3ZpZGVyLicsXG4gICAgbWF4aW1pemVOb3RTdXBwb3J0ZWRCeUJyb3dzZXJQcm92aWRlcjogICAnVGhlIHdpbmRvdyBtYXhpbWl6YXRpb24gZnVuY3Rpb25hbGl0eSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBcIntwcm92aWRlck5hbWV9XCIgYnJvd3NlciBwcm92aWRlci4nLFxuICAgIHJlc2l6ZUVycm9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1dhcyB1bmFibGUgdG8gcmVzaXplIHRoZSB3aW5kb3cgZHVlIHRvIGFuIGVycm9yLlxcblxcbntlcnJNZXNzYWdlfScsXG4gICAgbWF4aW1pemVFcnJvcjogICAgICAgICAgICAgICAgICAgICAgICAgICAnV2FzIHVuYWJsZSB0byBtYXhpbWl6ZSB0aGUgd2luZG93IGR1ZSB0byBhbiBlcnJvci5cXG5cXG57ZXJyTWVzc2FnZX0nLFxuICAgIHJlcXVlc3RNb2NrQ09SU1ZhbGlkYXRpb25GYWlsZWQ6ICAgICAgICAgJ3tSZXF1ZXN0SG9va306IENPUlMgdmFsaWRhdGlvbiBmYWlsZWQgZm9yIGEgcmVxdWVzdCBzcGVjaWZpZWQgYXMge3JlcXVlc3RGaWx0ZXJSdWxlfScsXG4gICAgZGVidWdJbkhlYWRsZXNzRXJyb3I6ICAgICAgICAgICAgICAgICAgICAnWW91IGNhbm5vdCBkZWJ1ZyBpbiBoZWFkbGVzcyBtb2RlLicsXG4gICAgZXJyb3JSZWFkQ29uZmlnRmlsZTogICAgICAgICAgICAgICAgICAgICAnQW4gZXJyb3IgaGFzIG9jY3VycmVkIHdoaWxlIHJlYWRpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZS4nLFxuICAgIGVycm9yQ29uZmlnRmlsZUNhbm5vdEJlUGFyc2VkOiAgICAgICAgICAgXCJGYWlsZWQgdG8gcGFyc2UgdGhlICcudGVzdGNhZmVyYy5qc29uJyBmaWxlLlxcXFxuXFxcXG5UaGlzIGZpbGUgaXMgbm90IGEgd2VsbC1mb3JtZWQgSlNPTiBmaWxlLlwiLFxuICAgIGNvbmZpZ09wdGlvbnNXZXJlT3ZlcnJpZGVuOiAgICAgICAgICAgICAgJ1RoZSB7b3B0aW9uc1N0cmluZ30gb3B0aW9ue3N1ZmZpeH0gZnJvbSB0aGUgY29uZmlndXJhdGlvbiBmaWxlIHdpbGwgYmUgaWdub3JlZC4nXG59O1xuIl19
