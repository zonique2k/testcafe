'use strict';

exports.__esModule = true;

exports.default = function (name, file) {
    let reporters = [];

    if (name instanceof Array) reporters = name.map(r => typeof r === 'string' || typeof r === 'function' ? { name: r } : r);else {
        const reporter = { name, file };

        reporters.push(reporter);
    }

    reporters.forEach(r => {
        if (r.outStream === void 0) return;

        r.file = r.outStream;

        delete r.outStream;
    });
    reporters.forEach(r => validateReporterOutput(r.file));

    return reporters;
};

var _isStream = require('is-stream');

var _runtime = require('../errors/runtime');

var _message = require('../errors/runtime/message');

var _message2 = _interopRequireDefault(_message);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isStreamMock(obj) {
    return obj && typeof obj.write === 'function' && typeof obj.end === 'function';
}

function validateReporterOutput(obj) {
    const isValidReporterOutput = obj === void 0 || typeof obj === 'string' || (0, _isStream.writable)(obj) || isStreamMock(obj);

    if (!isValidReporterOutput) throw new _runtime.GeneralError(_message2.default.invalidReporterOutput);
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcmVwYXJlLXJlcG9ydGVycy5qcyJdLCJuYW1lcyI6WyJuYW1lIiwiZmlsZSIsInJlcG9ydGVycyIsIkFycmF5IiwibWFwIiwiciIsInJlcG9ydGVyIiwicHVzaCIsImZvckVhY2giLCJvdXRTdHJlYW0iLCJ2YWxpZGF0ZVJlcG9ydGVyT3V0cHV0IiwiaXNTdHJlYW1Nb2NrIiwib2JqIiwid3JpdGUiLCJlbmQiLCJpc1ZhbGlkUmVwb3J0ZXJPdXRwdXQiLCJHZW5lcmFsRXJyb3IiLCJNRVNTQUdFIiwiaW52YWxpZFJlcG9ydGVyT3V0cHV0Il0sIm1hcHBpbmdzIjoiOzs7O2tCQW9CZSxVQUFVQSxJQUFWLEVBQWdCQyxJQUFoQixFQUFzQjtBQUNqQyxRQUFJQyxZQUFZLEVBQWhCOztBQUVBLFFBQUlGLGdCQUFnQkcsS0FBcEIsRUFDSUQsWUFBWUYsS0FBS0ksR0FBTCxDQUFTQyxLQUFLLE9BQU9BLENBQVAsS0FBYSxRQUFiLElBQXlCLE9BQU9BLENBQVAsS0FBYSxVQUF0QyxHQUFtRCxFQUFFTCxNQUFNSyxDQUFSLEVBQW5ELEdBQWlFQSxDQUEvRSxDQUFaLENBREosS0FFSztBQUNELGNBQU1DLFdBQVcsRUFBRU4sSUFBRixFQUFRQyxJQUFSLEVBQWpCOztBQUVBQyxrQkFBVUssSUFBVixDQUFlRCxRQUFmO0FBQ0g7O0FBRURKLGNBQVVNLE9BQVYsQ0FBa0JILEtBQUs7QUFDbkIsWUFBSUEsRUFBRUksU0FBRixLQUFnQixLQUFLLENBQXpCLEVBQ0k7O0FBRUpKLFVBQUVKLElBQUYsR0FBU0ksRUFBRUksU0FBWDs7QUFFQSxlQUFPSixFQUFFSSxTQUFUO0FBQ0gsS0FQRDtBQVFBUCxjQUFVTSxPQUFWLENBQWtCSCxLQUFLSyx1QkFBdUJMLEVBQUVKLElBQXpCLENBQXZCOztBQUVBLFdBQU9DLFNBQVA7QUFDSCxDOztBQTFDRDs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsU0FBU1MsWUFBVCxDQUF1QkMsR0FBdkIsRUFBNEI7QUFDeEIsV0FBT0EsT0FDQSxPQUFPQSxJQUFJQyxLQUFYLEtBQXFCLFVBRHJCLElBRUEsT0FBT0QsSUFBSUUsR0FBWCxLQUFtQixVQUYxQjtBQUdIOztBQUVELFNBQVNKLHNCQUFULENBQWlDRSxHQUFqQyxFQUFzQztBQUNsQyxVQUFNRyx3QkFBd0JILFFBQVEsS0FBSyxDQUFiLElBQ3hCLE9BQU9BLEdBQVAsS0FBZSxRQURTLElBRXhCLHdCQUFpQkEsR0FBakIsQ0FGd0IsSUFHeEJELGFBQWFDLEdBQWIsQ0FITjs7QUFLQSxRQUFJLENBQUNHLHFCQUFMLEVBQ0ksTUFBTSxJQUFJQyxxQkFBSixDQUFpQkMsa0JBQVFDLHFCQUF6QixDQUFOO0FBQ1AiLCJmaWxlIjoidXRpbHMvcHJlcGFyZS1yZXBvcnRlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3cml0YWJsZSBhcyBpc1dyaXRhYmxlU3RyZWFtIH0gZnJvbSAnaXMtc3RyZWFtJztcbmltcG9ydCB7IEdlbmVyYWxFcnJvciB9IGZyb20gJy4uL2Vycm9ycy9ydW50aW1lJztcbmltcG9ydCBNRVNTQUdFIGZyb20gJy4uL2Vycm9ycy9ydW50aW1lL21lc3NhZ2UnO1xuXG5mdW5jdGlvbiBpc1N0cmVhbU1vY2sgKG9iaikge1xuICAgIHJldHVybiBvYmogJiZcbiAgICAgICAgICAgdHlwZW9mIG9iai53cml0ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICAgICB0eXBlb2Ygb2JqLmVuZCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVSZXBvcnRlck91dHB1dCAob2JqKSB7XG4gICAgY29uc3QgaXNWYWxpZFJlcG9ydGVyT3V0cHV0ID0gb2JqID09PSB2b2lkIDAgfHxcbiAgICAgICAgICB0eXBlb2Ygb2JqID09PSAnc3RyaW5nJyB8fFxuICAgICAgICAgIGlzV3JpdGFibGVTdHJlYW0ob2JqKSB8fFxuICAgICAgICAgIGlzU3RyZWFtTW9jayhvYmopO1xuXG4gICAgaWYgKCFpc1ZhbGlkUmVwb3J0ZXJPdXRwdXQpXG4gICAgICAgIHRocm93IG5ldyBHZW5lcmFsRXJyb3IoTUVTU0FHRS5pbnZhbGlkUmVwb3J0ZXJPdXRwdXQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAobmFtZSwgZmlsZSkge1xuICAgIGxldCByZXBvcnRlcnMgPSBbXTtcblxuICAgIGlmIChuYW1lIGluc3RhbmNlb2YgQXJyYXkpXG4gICAgICAgIHJlcG9ydGVycyA9IG5hbWUubWFwKHIgPT4gdHlwZW9mIHIgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiByID09PSAnZnVuY3Rpb24nID8geyBuYW1lOiByIH0gOiByKTtcbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgcmVwb3J0ZXIgPSB7IG5hbWUsIGZpbGUgfTtcblxuICAgICAgICByZXBvcnRlcnMucHVzaChyZXBvcnRlcik7XG4gICAgfVxuXG4gICAgcmVwb3J0ZXJzLmZvckVhY2gociA9PiB7XG4gICAgICAgIGlmIChyLm91dFN0cmVhbSA9PT0gdm9pZCAwKVxuICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIHIuZmlsZSA9IHIub3V0U3RyZWFtO1xuXG4gICAgICAgIGRlbGV0ZSByLm91dFN0cmVhbTtcbiAgICB9KTtcbiAgICByZXBvcnRlcnMuZm9yRWFjaChyID0+IHZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQoci5maWxlKSk7XG5cbiAgICByZXR1cm4gcmVwb3J0ZXJzO1xufVxuIl19
